"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MetadataHandler = void 0;
require("reflect-metadata");
var MetadataHandler = /** @class */ (function () {
    function MetadataHandler(initialMetadataFactory, METADATA_KEY) {
        if (METADATA_KEY === void 0) { METADATA_KEY = Symbol('metadata'); }
        this.initialMetadataFactory = initialMetadataFactory;
        this.METADATA_KEY = METADATA_KEY;
    }
    MetadataHandler.prototype.get = function (target, key) {
        // Pull the existing metadata or create an the default metadata object
        var meta = (Reflect.getMetadata(this.METADATA_KEY, target)
            || this.initialMetadataFactory());
        if (key) {
            return meta[key];
        }
        return meta;
    };
    MetadataHandler.prototype.set = function (target, key, value) {
        this.update(target, function (meta) {
            meta[key] = value;
            return meta;
        });
    };
    MetadataHandler.prototype.update = function (target, cb) {
        // Pull the existing metadata
        var allMetadata = this.get(target);
        allMetadata = cb(allMetadata);
        // Update the metadata
        Reflect.defineMetadata(this.METADATA_KEY, allMetadata, target);
    };
    return MetadataHandler;
}());
exports.MetadataHandler = MetadataHandler;
//# sourceMappingURL=index.js.map